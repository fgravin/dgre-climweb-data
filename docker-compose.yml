services:

  dgre-web:
    image: nginx:latest
    container_name: dgre_web
    restart: ${RESTART_POLICY}
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - dgre-api
      - dgre-pg-tileserv
    ports:
      - ${APP_PORT}:80

  dgre-api:
    container_name: dgre_api
    build:
      context: .
      args:
        - DOCKER_COMPOSE_WAIT_PLATFORM_SUFFIX=${DOCKER_COMPOSE_WAIT_PLATFORM_SUFFIX:-}
    restart: ${RESTART_POLICY}
    environment:
      - DEBUG=True
      - WAIT_HOSTS=dgre_db:5432
      - WAIT_TIMEOUT=60
      - SQLALCHEMY_DATABASE_URI=postgresql://${DB_USER}:${DB_PASSWORD}@dgre_db:5432/${DB_NAME}
      - FLASK_APP=dgrehydro/__init__.py
    depends_on:
      dgre-db:
        condition: service_healthy
    ports:
      - 8001

  dgre-db:
    image: ${DB_IMAGE:-postgis/postgis:15-master}
    container_name: dgre_db
    restart: ${RESTART_POLICY}
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - ${DB_PORT}:5432

  dgre-pg-tileserv:
    image: pramsey/pg_tileserv:latest
    container_name: dgre_pg_tileserv
    restart: ${RESTART_POLICY}
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@dgre-db:5432/${DB_NAME}
    depends_on:
      - dgre-db
    ports:
      - 7800

volumes:
  postgres_data:
